<% @title = 'настройки внешнего вида тлога' %>
<% content_for :head do %>
  <!-- http://developer.yahoo.com/yui/articles/hosting/ -->
  <!-- css --> 
  <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.5.2/build/colorpicker/assets/skins/sam/colorpicker.css"> 
  <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.5.2/build/container/assets/skins/sam/container.css"> 
  <!-- js --> 
  <script type="text/javascript" src="http://yui.yahooapis.com/2.5.2/build/utilities/utilities.js"></script> 
  <script type="text/javascript" src="http://yui.yahooapis.com/2.5.2/build/slider/slider-min.js"></script> 
  <script type="text/javascript" src="http://yui.yahooapis.com/2.5.2/build/colorpicker/colorpicker-min.js"></script> 
  <script type="text/javascript" src="http://yui.yahooapis.com/2.5.2/build/container/container-min.js"></script>
<% end %>
<% content_for :header do %>
	оформление тлога
<% end %>

<form method='post' action='<%= user_url(current_site, settings_path(:action => 'design')) %>' enctype="multipart/form-data" class='small'>
	<h2>Фоновая картинка</h2>
	<table class='form'>
		<tr id='choise_1'>
			<td class='label'><label for='bg_by_link_input'>Ссылка:</label></td>
			<td class='input'>
				<%= text_field 'design', 'background_url' %>
				<div class='input_note'>
					<%= link_to_function "Картинка есть у Вас на диске?", "$('choise_2', 'choise_1').invoke('toggle');" %>
				</div>
			</td>
		</tr>
		<tr id='choise_2' style='display: none'>
			<td class='label'><label for='attachment_uploaded_data'>Файл:</label></td>
			<td class='input'>
				<%= file_field 'attachment', :uploaded_data %>
				<%= tasty_error_message_on 'attachment', 'uploaded_data' %>
				<div class='input_note'>
					<%= link_to_function "Использовать ссылку", "$('choise_2', 'choise_1').invoke('toggle');" %>
				</div>			
			</td>
		</tr>
		<tr>
			<td class='label'></td>
			<td class='input'>
				<%= check_box 'design', 'background_fixed' %><label for='design_background_fixed' id='design_background_fixed_label'>зафиксировать</label>
			</td>
		</tr>
	</table>

	<h2>Расположение и оформление дат</h2>
	<table class='date_style'>
		<tr>
			<td></td>
			<td>
				<label>
					<%= radio_button :design, :date_style, 'inside' %> внутри, по-умолчанию
				</label>
			</td>
		</tr>
		<tr>
			<td></td>
			<td>
				<label>
					<%= radio_button :design, :date_style, 'huge' %> большая, сбоку
				</label>
			</td>
		</tr>
		<tr>
			<td></td>
			<td>
				<label>
					<%= radio_button :design, :date_style, 'outside' %> маленькая, сбоку
				</label>
			</td>
		</tr>
	</table>
	
	<h2>Цвета</h2>
	<table id='design_colors' class='form'>
		<tr>
			<th colspan='2'></th>
			<th class='transparent' title='включает прозрачность, и цвет не будет учитываться'>Выкл</th>
			<th colspan='2'></th>
		</tr>
		<tr>
			<td class='label'>фоновый</td>
			<td><%= text_field 'design', 'color_bg', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
			<td></td>
			<td class='label border'>даты</td>
			<td><%= text_field 'design', 'color_date', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
		</tr>
		<tr>
			<td class='label'>фон ленты тлога</td>
			<td><%= text_field 'design', 'color_tlog_bg', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
			<td><%= check_box 'design', 'color_tlog_bg_is_transparent', :class => 'checkbox' %></td>
			<td class='label border'>текст в тлоге</td>
			<td><%= text_field 'design', 'color_tlog_text', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
		</tr>
		<tr>
			<td class='label design_color_sidebar_bg_label'>фон боковой панели<br><span class='input_note'>и даты, когда она сбоку</span></td>
			<td><%= text_field 'design', 'color_sidebar_bg', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
			<td><%= check_box 'design', 'color_sidebar_bg_is_transparent', :class => 'checkbox', :disabledonclick => 'design_check_box(this, "design_color_sidebar_bg");' %></td>
			<td class='label border'>текст боковой панели</td>
			<td><%= text_field 'design', 'color_sidebar_text', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
		</tr>
		<tr>
			<td class='label'>фон голосовалки</td>
			<td><%= text_field 'design', 'color_voter_bg', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
			<td><%= check_box 'design', 'color_voter_bg_is_transparent', :class => 'checkbox' %></td>
			<td class='label border'>текст голосовалки</td>
			<td><%= text_field 'design', 'color_voter_text', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
		</tr>
		<tr>
			<td class='label'>подсветка<br><span class='input_note'>поднадька, поданька</span></td>
			<td><%= text_field 'design', 'color_highlight', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
			<td></td>
			<td class='label border'>текст ссылки</td>
			<td><%= text_field 'design', 'color_link', :class => 'tlog_color_picker', :autocomplete => 'off' %></td>
		</tr>
	</table>
	
	<div class='submit_button'>
		<input type='submit' value='Сохранить' class='button' />
	</div>
	
	<h2>Предпросмотр</h2>
	<div id='design_preview' style='<%= "background-image: url(#{image_path @design.background_url});" unless @design.background_url.blank? %><%= "background-color: ##{@design.color_bg};" unless @design.color_bg.blank? %>' class='design_color_bg'>
		<div id='design_tlog_title'>
			<span class='design_color_sidebar_bg design_color_sidebar_text'><%= h current_user.url %></span>
		</div>
		<div class='rel'>
			<div id='design_sidebar'>
				<div><p class='design_color_sidebar_text design_color_sidebar_bg'>О нем</p></div>
				<div><p class='design_color_sidebar_text design_color_sidebar_bg'>Поиск</p></div>
				<div><p class='design_color_sidebar_text design_color_sidebar_bg'>Теги</p></div>
				<div><p class='design_color_sidebar_text design_color_sidebar_bg'>Календарь</p></div>
				<div><p class='design_color_highlight design_color_sidebar_text'>Друзья</p></div>
				<div><p class='design_friends'>
					<% current_user.public_friends[0..5].each do |user| %>
						<%= link_to_tlog user, {}, :class => 'design_color_sidebar_text design_color_sidebar_bg' %>
					<% end %>
					...
				</p></div>
			</div>
		</div>
		<div id='design_preview_tlog' class='design_color_tlog_bg design_color_tlog_text' style='<%= "background-color: ##{@design.color_tlog_bg};" unless @design.color_tlog_bg.blank? %><%= "color: ##{@design.color_tlog_text}" unless @design.color_tlog_text.blank? %>'>
			<div id='design_date' class='design_color_date'>Сегодня, <%= "#{Time.now.mday} #{Time.now.month.to_rmonth}" %></div>
			<div class='rel'>
				<div id='design_voter' class='design_color_voter_bg design_color_voter_text'>7</div>
			</div>
			<h2 class='design_color_tlog_text'>Заголовок</h2>
			<p>примерно так будет выглядеть ваш тлог если отойти от монитора на 10 метров</p>
			<h2 class='design_color_tlog_text'>Картинка</h2>
			<p><%= image_tag "sleepy_hollow_by_spookyme.jpg" %></p>
			<h2 class='design_color_tlog_text'>Cсылка</h2>
			<p><a href='http://www.mmm-tasty.ru/' class='design_color_link' style='<%= "color: ##{@design.color_link}" if false %>'>mmm-tasty.ru</a></p>
			<h2 class='design_color_tlog_text'>Цитата</h2>
			<p><span>&laquo;</span>То, что долго живет, растет медленно<span>&raquo;</span></p>
		</div>
	</div>

	<h2>Ваш CSS</h2>
	<%= link_to_function 'Добавьте ваш собственный CSS-код', 'Effect.toggle("design_css", "blind", { duration: 0.3 });', :class => 'design_css_toggle' %>
	<div id='design_css'<%= " style='display: none'" if @design.user_css.blank? %>>
		<div>
			<%= text_area :design, :user_css, :rows => nil, :cols => nil, :class => 'resizable' %>
			<%= tasty_error_message_on 'design', 'user_css' %>
		</div>
	</div>
	

	<div class='submit_button'>
		<input type='submit' value='Сохранить' class='button' />
	</div>
</form>

<% content_for :body do %>
  <div id='y-panel' class='yui-skin-sam yui-picker-panel'>
    <div class='hd'>Выберите цвет:</div>
    <div class='bd y-panel-bd'>
      <div id='y-picker' class='yui-picker'></div>
    </div>
    <div class='ft'>
      <input type='submit' value='окей' class='button' id='y-panel-ok'>
      или <a href='#' id='y-panel-cancel'>отменить</a>
    </div>
  </div>
<% end %>

<script type='text/javascript'>
function design_check_box(element, field) {
  var field = $(field);

  if(element.checked) {
    field.disabled = true;
    field.style.color = '#999';
    field.style.backgroundColor = '#333'
    $$('.' + field.id + '_label').each(function(e) {
      e.style.color = '#999';
    });
  } else {
    field.disabled = false;
    field.style.color = '';
    $$('.' + field.id + '_label').each(function(e) {
      e.style.color = '';
    });    
  }
}


var TlogColorPicker = Class.create({
  initialize: function(elements) {
    this.yuc = YAHOO.util.Color;
    this.repositionable = true;
    
    this.panel = new YAHOO.widget.Panel('y-panel', {
      width: '400px',
      visible: false,
      constraintoviewport: true,
      close: true, 
      draggable: true,
      dragonly: true,
      underlay: 'shadow',
      keylisteners: YAHOO.util.KeyListener(document.body, [YAHOO.util.KeyListener.KEY.ESC, YAHOO.util.KeyListener.KEY.ENTER], this.onKeyPress.bind(this)),
      effect: { effect: YAHOO.widget.ContainerEffect.FADE, duration: 0.3 }
    });
    
    this.panel.renderEvent.subscribe(function() {
      if(!this.picker) { 
        this.picker = new YAHOO.widget.ColorPicker('y-picker', {
          images: {
            PICKER_THUMB: '<%= image_path('colorpicker/select.gif') %>',
            HUE_THUMB: '<%= image_path('colorpicker/hline.png') %>'
          },
          txt: {
            ILLEGAL_HEX: "введено неправильное значение",
            SHOW_CONTROLS: 'показать цифры',
            HIDE_CONTROLS: 'спрятать цифры',
            R: 'R',
            G: 'G',
            B: 'B',
            HEX: '#'
          },
          showhexsummary: false,
          showhexcontrols: true,
          container: this.panel
        });
      }
    });
    this.panel.dragEvent.subscribe(this.onDrag.bind(this));
    this.panel.render(document.body);
    
    // install our handlers
    self = this;
    elements.each(function(element) {
      element.observe('click', self.onClick.bindAsEventListener(self));
      self.colorize(element, element.value);
    });
    
    // handle panel events
    Event.observe('y-panel-ok', 'click', this.hide.bindAsEventListener(this));
    Event.observe('y-panel-cancel', 'click', this.cancel.bindAsEventListener(this));
  },
  onDrag: function(type, arguments) {
    this.repositionable = false;
  },
  onClick: function(event) {
    this.element = event.element();

    if(this.repositionable) {
      var offsets = this.element.positionedOffset();

      if(offsets[0] + 520 > document.viewport.getWidth()) {
        this.panel.cfg.setProperty('x', offsets[0] - 420);
      } else {
        this.panel.cfg.setProperty('x', offsets[0] + 80 );
      }
      // this.panel.cfg.setProperty('x', offsets[0] + (offsets[0] + 520 > document.viewport.getWidth()) ? -420 : 80)
      this.panel.cfg.setProperty('y', offsets[1] - 80);
    }

    // save original color, used when user presses cancel link
    this.original_color = this.element.value;

    // show panel and initialize picker
    this.panel.show();

    this.panel.picker.setValue(this.yuc.hex2rgb(this.element.value), true);
    this.panel.picker.on('rgbChange', this.onChange.bind(this));
  },
  onChange: function(o) {
    this.element.value = this.yuc.rgb2hex(o.newValue);
    this.colorize(this.element, this.element.value)
  },
  colorize: function(element, hex_color) {
    if(element.id.match(/(_text|link|date)/)) {
      element.style.color = '#' + hex_color;
      if(this.yuc.rgb2hsv(this.yuc.hex2rgb(hex_color))[2] < 0.5) {
        element.style.backgroundColor = 'white';
      } else {
        element.style.backgroundColor = 'black';
      }
      
      $$('.' + element.id).each(function(e) {
        e.style.color = '#' + hex_color;
      });
    } else {
      element.style.backgroundColor = '#' + hex_color;
      if(this.yuc.rgb2hsv(this.yuc.hex2rgb(hex_color))[2] < 0.5) {
        element.style.color = 'white';
      } else {
        element.style.color = 'black';
      }
      $$('.' + element.id).each(function(e) {
        e.style.backgroundColor = '#' + hex_color;
      });
    }
  },
  cancel: function(event) {
    this.element.value = this.original_color;
    this.colorize(this.element, this.element.value);
    this.hide();

    event.stop();
  },
  onKeyPress: function(key, event) {
    alert(key);
    alert(event);
    
    this.hide();

    event.stop();
  },
  // handleKeyPress: function() {
  //   this.unhandleKeyPress();
  //   this.keypress_handler = this.onKeyPress.bindAsEventListener(this);
  //   document.observe('keypress', this.keypress_handler);
  // },
  // unhandleKeyPress: function() {
  //   if(this.keypress_handler) {
  //     document.stopObserving('keypress', this.keypress_handler);
  //   }
  // },
  hide: function() {
    this.panel.hide();
    this.repositionable = true;
  }
});

YAHOO.util.Event.onDOMReady(function() {
  new TlogColorPicker($$('.tlog_color_picker'));
});
</script>