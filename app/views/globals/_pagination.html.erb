<%-
  total_pages = pageable.page_count if pageable.respond_to?(:page_count)
  total_pages ||= pageable.total_pages if pageable.respond_to?(:total_pages)
  total_pages ||= 0
  
  previous_page = next_page = nil
  
  if total_pages > 0
    previous_page = pageable.previous_page if (pageable.respond_to?(:previous_page?) && pageable.previous_page?) || pageable.previous_page
    next_page = pageable.next_page if (pageable.respond_to?(:next_page?) && pageable.next_page?) || pageable.next_page

    # search overflow
    next_page = nil if next_page && next_page > 67 && params[:controller] == 'search'
  end
  
  css_class ||= ''
  reverse ||= false  
  url_options ||= {}  

  if total_pages > 1
-%><div class='entry_pagination<%= " #{css_class}" unless css_class.blank? %>'><%=

    if next_page
      url = url_for({ :controller => params[:controller], :action => params[:action], :page => reverse ? (total_pages - next_page + 1) : next_page, :only_path => true }.update(url_options))
      link_to('&#x2190; ранее', current_site ? user_url(current_site, url) : service_url(url), :class => 'entry_paginate_prev') 
    end
%> <%=
		if previous_page
			if previous_page == 1
			  url = url_for({ :controller => params[:controller], :action => params[:action], :page => nil, :only_path => true }.update(url_options))
				link_to 'сейчас &#x2192;', current_site ? user_url(current_site, url) : service_url(url), :class => 'entry_paginate_next'
			else
			  url = url_for({:controller => params[:controller], :action => params[:action], :page => reverse ? (total_pages - previous_page + 1) : previous_page, :only_path => true }.update(url_options))
				link_to 'позже &#x2192;', current_site ? user_url(current_site, url) : service_url(url), :class => 'entry_paginate_next'
			end
		end
	%></div><%-
  end -%>